svd(mat)
matu * diag *t(matv)
matu * diag * t(matv)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2 <- svd(constantMatrix)
svd2$d
svd2
svd2$v[,1,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% (svd1$d[1] %*% svd1$v)
a1 <- svd1$u[,1] * (svd1$d[1] * svd1$v)
a1 <- (svd1$u[,1] * svd1$d[,1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[1,1:2] %*% diag(svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(a2)
myImage(svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(dplyr)
library('dplyr')
install.packages('dplyr')
#Reading the data
library(dplyr)
library(plyr)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_classification_code.rds")
# select the emmision from the Vehicle in other word we are retrieving the SSC_Code
vehicle <- SCC %>% # we select the data frame from the source code
filter(grepl('[Vv]ehicle', SCC.Level.Two )) %>%
select(SCC)
Baltimore <- NEI %>%
filter(fips == "24510") %>%
select (fips,SCC,Emissions, year ) %>%
inner_join(vehicle, by="SCC") %>%
group_by(year) %>%
summarise(emmision = sum(Emissions, na.rm = TRUE)) %>%
select(fips, emmision, year)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_classification_code.rds")
library(dplyr)
library(plyr)
library(ggplot2)
?summarise
?summarise
?weekdays
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-02"))
names(df)
colnames(df)
df$day <- weekdays(as.Date(df$date))
dim(df)
df
install.packages('chron')
library(chron)
df$weekend <-is.weekend(df$date)
df
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-is.weekend(df$date)
df
df$weekend <-if (is.weekend(df$date) == TRUE){
df$weekend = "Weekend"
}else{
df$weekend = "Weekday"
}
df$weekend <-if (is.weekend(df$date) = TRUE){
df$weekend = "Weekend"
}else{
df$weekend = "Weekday"
}
df$weekend <-if (is.weekend(df$date)){
df$weekend = "Weekend"
}else{
df$weekend = "Weekday"
}
df$weekend <-if (is.weekend(df$date)){
df$weekend <- "Weekend"
}else{
df$weekend <- "Weekday"
}
df$weekend <-is.weekend(df$date)
DF
df
test <- function(d) {
if (is.weekend(df$date))
{
w <- "weekend"
} else{
w < - "weekday"
}
}
test(df$day)
test <- function(d) {
if (is.weekend(d))
{
w <- "weekend"
} else{
w < - "weekday"
}
return(w)
}
test(d = as.Date("2012-02-01"))
test <- function(d) {
if (is.weekend(d))
{
wek <- "weekend"
}
wek  <- "weekday"
return(wek)
}
test(d = as.Date("2012-02-01"))
test(d = as.Date("2012-02-05"))
test(d = as.Date("2012-02-06"))
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
#install.packages('chron')
#library(chron)
df$weekend <-is.weekend(df$date)
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
install.packages('chron')
library(chron)
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <- is.weekend(df$date)
df
rm(list = ls())
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-  if (is.weekend(df$date) == "TRUE"){
df$weekend = "Weekend"
}
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-  is.weekend(df$date) == "TRUE"
class(df$weekend)
getwd()
setwd("C:/Users/dannyng.DIGICORE/Google Drive/Datascience/coursera/Reproducible research/week 2/Project 1/RepData_PeerAssessment1")
# Reading the activity data
activity <- read.csv("activity.csv")
## the data with missing value
dim (activity)
# AGregate the activity by calculating the mean of each step by interval
activity2 <- aggregate(steps~interval, data = activity, FUN = mean , na.rm = TRUE)
## Now replace the missing value (NA) with the mean
for( x in 1: nrow(activity)){
if(is.na(activity$steps[x]) == TRUE){
#get the number of the interval from the missing value
NAval<-activity[x,3]
# once we have the Interval value of the missing value , we can determine mean value from the activity2 table
meanval <- subset(activity2, interval == NAval, select = steps)
# replace the NA of the activity by the mean of the interval
activity[x,1] = meanval
}
}
#. Create a new dataset that is equal to the original dataset but with the missing data filled in
## new data dimension without the missing value
ActivityNew <- activity
dim(ActivityNew)
mean(is.na(ActivityNew))
head(ActivityNew)
str(ActivityNew)
ActivityNew$date <- as.Date(ActivityNew$date)
str(ActivityNew)
str(df)
class(df$date)
# Reading the activity data
activity <- read.csv("activity.csv")
## the data with missing value
dim (activity)
# AGregate the activity by calculating the mean of each step by interval
activity2 <- aggregate(steps~interval, data = activity, FUN = mean , na.rm = TRUE)
## Now replace the missing value (NA) with the mean
for( x in 1: nrow(activity)){
if(is.na(activity$steps[x]) == TRUE){
#get the number of the interval from the missing value
NAval<-activity[x,3]
# once we have the Interval value of the missing value , we can determine mean value from the activity2 table
meanval <- subset(activity2, interval == NAval, select = steps)
# replace the NA of the activity by the mean of the interval
activity[x,1] = meanval
}
}
#. Create a new dataset that is equal to the original dataset but with the missing data filled in
## new data dimension without the missing value
ActivityNew <- activity
dim(ActivityNew)
str(ActivityNew)
class(df$date)
df$days <-if (df$weekend == TRUE) {
week
}
df$days <-if (df$weekend = TRUE) {
week
}
dfW <- function (x){
if (x = TRUE) {
x <-  "week"
}
x <- "noweek"
}
dfW <- function (x){
if (x = TRUE) {
x <-  "week"
}
x <- "noweek"
return x
}
dfW <- function (x){
if (x = TRUE) {
x <-  "week"
}
x <- "noweek"
return(x)
}
dfW <- function (x){
if (x = TRUE) {
d <- "week"
}
d <- "noweek"
return(d)
}
dfW <- function (x){
if (x = TRUE) {
d <- "week"
}
d <- "noweek"
}
dfW <- function (x){
z <- x+2
}
dfW <- function (x){
if (x$weekend == TRUE){
z <- "week"
}
z <- "No week"
}
dfW(x = df)
dfW <- function (x){
if (x$weekend == 'T'){
z <- "week"
}
z <- "No week"
}
dfW(x = df)
dfW <- function (x){
if (x$weekend){
z <- "week"
}
z <- "No week"
}
dfW(x = df)
dfW <- function (x){
if (x$weekend){
z <- "week"
}
z <- "No week"
return(z)
}
dfW(x = df)
df
df = data.frame(date=c("2012-02-05", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-  is.weekend(df$date) == "TRUE"
dfW(x = df)
dfW <- function (x){
if (x$weekend[1,3]){
z <- "week"
}
z <- "No week"
return(z)
}
dfW(x = df)
dim(df)
dfW <- function (x){
if (x$weekend[1,3]){
z <- "week"
}
z <- "No week"
return(z)
}
dfW <- function (x){
if (x[1,3]){
z <- "week"
}
z <- "No week"
return(z)
}
dfW(x = df)
dfW <- function (x){
if (x[1,3]){
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW(x = df)
dfW <- function (x){
if (x[1,3] == TRUE){
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW(x = df)
dfW <- function (x){
if (isTRUE(x[1,3])){
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW(x = df)
df$weekend  <- as.character(df$weekend)
dfW <- function (x){
if (x[1,3] == "TRUE"){
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW(x = df)
dfW <- function (x){
if (x[1,3] == TRUE){
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW(x = df)
dfW <- function (x){
if (x[1,3] == 'TRUE')
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW <- function (x){
if (x[1,3] == 'TRUE'){
z <- "week"
print (x[1,3])
}
z <- "No week"
return(z)
}
dfW(x = df)
?is.weekend
df = data.frame(date=c("2012-02-05", "2012-02-01", "2012-02-05"))
rm(list = ls())
df = data.frame(date=c("2012-02-05", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df
for(x in 1:nrow(df)){
if (is.weekend(df[x,3])==TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
if (is.weekend(as.date(df[x,3]) TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
var <- as.date(df[x,3])
if (is.weekend(var) ==TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
var <- as.Date(df[x,3])
if (is.weekend(var) ==TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
df = data.frame(date=c("2012-02-05", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-  is.weekend(df$date)
df$weekend  <- as.character(df$weekend)
df
str(df)
rm(list = ls())
df = data.frame(date=c("2012-02-05", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-  is.weekend(df$date)
str(df)
for(x in 1:nrow(df)){
if (is.weekend(df[x,3]) == TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
browser()
print (x)
browser(x)
if (is.weekend(df[x,3]) == TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
browser()
print (x)
browser(x)
print (df[x,3])
browser()
if (is.weekend(df[x,3]) == TRUE)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
browser()
print (x)
browser(x)
print (df[x,3])
browser()
if (is.weekend(df[x,3]) == 1)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
for(x in 1:nrow(df)){
browser()
print (x)
browser(x)
print (df[x,3])
browser()
if (df[x,3] == 1)
{
df[x,3] == "weekend"
} else{
df[x,3] == "Weekday"
}
}
df
for(x in 1:nrow(df)){
browser()
print (x)
browser(x)
print (df[x,3])
browser()
if (df[x,3] ==TRUE)
{
df[x,3] = "weekend"
} else{
df[x,3] = "Weekday"
}
}
df
df = data.frame(date=c("2012-02-02", "2012-02-01", "2012-02-05"))
df$weekend <-  is.weekend(df$date)
rm(list = ls())
df = data.frame(date=c("2012-02-02", "2012-02-01", "2012-02-05"))
df$day <- weekdays(as.Date(df$date))
df$weekend <-  is.weekend(df$date)
df
for(x in 1:nrow(df)){
browser()
print (x)
browser(x)
print (df[x,3])
browser()
if (df[x,3] ==TRUE)
{
df[x,3] = "weekend"
} else{
df[x,3] = "Weekday"
}
}
df
str(df)
df$weekend <- as.factor(df$weekend)
str(df)
getwd()
